{"version":3,"sources":["resources/Movie-App.gif","resources/Discover-Tracks-App.gif","components/Nav.js","components/Home.js","components/About.js","components/Projects.js","components/Contact.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavColor","Nav","props","React","useState","value","setValue","StyledTabs","withStyles","indicator","display","justifyContent","backgroundColor","width","borderRadius","maxWidth","Tabs","TabIndicatorProps","children","StyledTab","theme","root","fontFamily","opacity","Tab","disableRipple","onChange","event","newValue","label","name","to","component","Link","Home","Container","className","id","style","fontWeight","color","margin","fontSize","About","projects","link","languages","imgSRC","projectMovie","alt","projectDiscoverTracks","Projects","map","project","i","Card","key","onClick","window","open","showProject","CardContent","src","Contact","href","target","rel","NotFound","console","log","height","alignItems","withRouter","history","urlPath","location","pathname","split","path","exact","from","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6075c55e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Movie-App.c255f653.gif\";","module.exports = __webpack_public_path__ + \"static/media/Discover-Tracks-App.dd95cef9.gif\";","import React from 'react';\n\nimport '../App.css';\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport { Button } from '@material-ui/core';\nimport Tab from '@material-ui/core/Tab';\nimport { style } from '@material-ui/system';\nimport Typography from '@material-ui/core/Typography';\n\nlet NavColor = [\"#6c83ea\",\"#e6695f\",\"#a35fe6\"]; //green #85d582, yellow #e6cd5f // ,\"#85d582\" about styling\n\nfunction Nav(props) {\n  const navStyle = {\n    //textDecoration: \"none\",\n    //color: \"white\"\n  };\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const getStyle = theme => ({\n    mainIndicator: {\n      width: 40,\n      display: \"flex\",\n      justtifyContent: \"center\"\n    },\n  });\n\n\n  const StyledTabs = withStyles({\n    indicator: {\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor: 'transparent',\n      width: '100%',\n      '& > span': {\n        borderRadius:'10px',\n        maxWidth: 40,\n        width: '100%',\n        backgroundColor: NavColor[value],\n      },\n    },\n  })((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n  \n  const StyledTab = withStyles((theme) => ({\n    root: {\n      fontFamily: `'Lato', sans-serif`,\n      '&:focus': {\n        opacity: 1,\n      },\n    },\n  }))((props) => <Tab disableRipple {...props} />);\n\n  return (\n    <div>\n        {/* <Tabs value={value} onChange={handleChange} TabIndicatorProps={{ style: { backgroundColor: '#635ee7' }}}>\n          <Tab value={0} label=\"Ryan Paul\" to=\"/\" disableRipple component={Link} />\n          <Tab value={1} label=\"About\" to=\"/about\" disableRipple component={Link}/>\n          <Tab value={2} label=\"Projects\" to=\"/projects\" disableRipple component={Link}/>\n          <Tab value={3} label=\"Contact\" to=\"/contact\" disableRipple component={Link}/>\n        </Tabs> */}\n\n        <StyledTabs value={value} onChange={handleChange} >\n          <StyledTab label=\"Home\" name=\"ryanpaul\" to=\"/\" component={Link} />\n          {/* <StyledTab label=\"About\" to=\"/about\" component={Link}/> */}\n          <StyledTab label=\"Projects\" to=\"/projects\" component={Link}/>\n          <StyledTab label=\"Contact\" to=\"/contact\" component={Link}/>\n            {/* <Button style={{justifySelf: 'flex-end', backgroundColor: '#e6695f', color: '#fffcf7', height: '35px', margin: '10px 0px 0px 0px'}}>Resume</Button> */}\n        </StyledTabs>\n        \n        \n    </div>\n  );\n} \n\nexport default Nav;\n\n\n","import React from 'react';\nimport '../App.css';\nimport { Container, Card, CardContent, Button } from '@material-ui/core';\nimport image from '../resources/Movie-App.gif'\n\nfunction Home() {\n  return (\n    <Container maxWidth=\"md\">\n      <div className=\"page-styling\" id=\"home-page\">\n        {/* <p className=\"main-heading\" style={{color: '#6c83ea'}}>Ryan Paul</p> */}\n        <div style={{fontWeight: \"bold\", color: '#6c83ea', display: \"flex\", margin: \"10px 10px 25px 10px\", fontSize: \"0.8em\"}}>I like to code and make art.</div>\n        {/* <Button variant=\"outlined\" color=\"secondary\">\n          Resume\n        </Button> */}\n        {/* <Card className=\"card-styling\">\n          <CardContent className=\"card-box-styling\">\n            <img className=\"card-img-styling\" src={image} alt=\"Image of me\"/>\n            <p className=\"card-content-styling\">Ryan Paul</p>\n          </CardContent>\n        </Card> */}\n        {/* <div style={{fontSize: \"25px\",fontWeight: \"bold\", color: 'rgb(155 107 240)', display: \"flex\", margin: \"10px 10px 10px 10px\"}}>Status: Working on some cool stuff </div> */}\n      </div>\n    </Container>\n    );\n} \n\nexport default Home;","import React from 'react';\nimport { Container } from '@material-ui/core';\n\nfunction About() {\n  return (\n    <Container maxWidth=\"md\">\n      <div className=\"page-styling\">\n        <p className=\"main-heading\" style={{color: '#85d582'}}>About</p>\n        <div className=\"text-box\">\n          <p>\n            \n          </p>\n        </div>\n      </div>\n    </Container>\n  );\n} \n\nexport default About;","import React from 'react';\nimport { Container, Card, CardContent } from '@material-ui/core';\nimport projectMovie from '../resources/Movie-App.gif';\nimport projectDiscoverTracks from '../resources/Discover-Tracks-App.gif';\n\nvar projects = [{\n    link: \"https://github.com/ryanPaul07/MovieManager\",\n    languages: \"REACT * BOOTSTRAP * omdbAPI\",\n    imgSRC: projectMovie,\n    alt: \"Movie Search Project\"\n  },\n  {\n    link: \"https://github.com/ryanPaul07/discovertracks\",\n    languages: \"REACT * Spotify API * Tumblr API * OAuth 2.0\",\n    imgSRC: projectDiscoverTracks,\n    alt: \"Discover Tracks Project\"\n  }\n]\n\nfunction Projects() {\n\n  const showProject = (project) => {\n    window.open(project.link);\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <div className=\"page-styling\">\n        <p className=\"main-heading\" style={{color: '#e6695f'}}>Projects</p>\n        <div className=\"card-view\">\n          {\n            projects.map((project, i)=> {\n              return <Card key={i} className=\"card-styling\" onClick={()=> showProject(project)}>\n                <CardContent className=\"card-box-styling\">\n                  <img className=\"card-img-styling\" src={project.imgSRC} alt={project.alt}/>\n                  <p className=\"card-content-styling\">{project.languages}</p>\n                </CardContent>\n              </Card>\n            })\n          }\n        </div>\n      </div>\n    </Container>\n  );\n} \n\nexport default Projects;","import React from 'react';\nimport { Container } from '@material-ui/core';\n\nfunction Contact() {\n  return(\n    <Container maxWidth=\"md\">\n      <div className=\"page-styling\">\n        <p className=\"main-heading\" style={{color: '#a35fe6'}}>Contact</p>\n        <div className=\"sub-page-styling\">\n          <a className=\"contact-link-styling\" href=\"mailto: rpaul06@uoguelph.ca\"><strong>Email</strong></a>\n          <a className=\"contact-link-styling\" href=\"https://github.com/ryanPaul07\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Github</strong></a>\n          <a className=\"contact-link-styling\" href=\"https://www.linkedin.com/in/ryan-paul07/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>LinkedIn</strong></a>\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default Contact;","import React, {useEffect} from 'react';\nimport { Container } from '@material-ui/core';\n\nfunction NotFound() {\nconsole.log('reahced not found s');\n\n  return (\n    <div style={{width: '100vw', height: \"100vh\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n      <h1 style={{color: '#e6695f'}}>404 page not found : (</h1>\n    </div>\n  );\n} \n\nexport default NotFound;","import React, {useEffect} from 'react';\nimport './App.css';\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\nimport NotFound from './components/NotFound';\n\nimport {BrowserRouter as Router, Switch, Route, Redirect, withRouter} from 'react-router-dom';\n\n\nfunction App({history}) {\n  let urlPath = window.location.pathname.split('/')[1];\n\n  return (\n    <div className=\"App\">\n      { urlPath == \"\" || urlPath == \"about\" || urlPath == \"projects\" || urlPath == \"contact\" \n      ?\n          <Router> \n            <Nav />\n          <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/projects\" component={Projects} />\n            <Route path=\"/contact\" component={Contact} />\n          </Switch>\n        </Router>\n      : \n        <Router>\n          <Switch>\n            <Route path=\"/404\" component={NotFound} />\n            <Redirect from=\"*\" to=\"/404\"/>\n          </Switch>\n        </Router>\n      }\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}